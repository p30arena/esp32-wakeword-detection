#include <Arduino.h>
#include <AutoAnalogAudio.h>

#define MIC_L 12

AutoAnalog aaAudio;
uint32_t samples = 0;
bool stop = false;

void setup()
{
  Serial.begin(115200);

  pinMode(MIC_L, OUTPUT);
  digitalWrite(MIC_L, HIGH);

  Serial.println("Analog Audio Begin");

  aaAudio.begin(1, 0);           // Setup aaAudio using ADC only
  aaAudio.autoAdjust = 0;        // Disable auto adjust of timers
  aaAudio.adcBitsPerSample = 12; // Sample at 12-bits
  aaAudio.setSampleRate(32);     // Get 32 samples every second

  aaAudio.enableAdcChannel(5);
  aaAudio.disableAdcChannel(0);

  //Start loading ADC buffers
  aaAudio.getADC(32);
}

void loop()
{
  // Get 32 samples from the ADC at the sample rate defined above
  // Note: This function only blocks if the ADC is currently sampling and autoAdjust is set to 0
  // As long as any additional code completes before the ADC is finished sampling, a continuous stream of ADC data
  // at the defined sample rate will be available
  aaAudio.getADC(32);

  // Sum all the samples into a float
  float allSamples = 0.0;
  for (int i = 0; i < 32; i++)
  {
    allSamples += aaAudio.adcBuffer16[i];
  }

  // Divide the total by the number of samples
  allSamples /= 32.0;

  // This will print every second at a sample rate of 32 samples/second
  Serial.print("Samples Total Value / Number of Samples == ");
  Serial.println(allSamples);
}